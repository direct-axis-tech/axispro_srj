@push('styles')
<style>
    .expenses-table th, .expenses-table td {
        padding-left: 0.75rem;
        padding-right: 1.5rem !important;
    }

    .expenses-table th {
        height: initial !important;
        vertical-align: bottom;
    }
</style>
@endpush
<div id="show-expenses-model"
    class="modal fade"
    tabindex="-1"
    aria-labelledby="show-expenses-model-label"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="show-expenses-model-label">Showing expenses against transaction #<span id="show-expenses--lbl_line_ref"></span></h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body bg-white rounded">
                <table id="expenses-table" class="expenses-table table table-striped table-bordered table-hover gx-3 w-100 text-nowrap thead-strong">
                    <!-- Generated by Data Table -->
                </table>
            </div>
        </div>
    </div>
</div>

@push('scripts')
<script>
    $(function () {
        window.Transaction = window.Transaction || {};

        const dateFormat = '{{ dateformat('momentJs') }}';
        const modalEl = document.getElementById('show-expenses-model');
        const tableEl = document.getElementById('expenses-table');
        const lineReferenceLabel = document.getElementById('show-expenses--lbl_line_ref');
        const modal = new bootstrap.Modal(modalEl);
        const numberFormatter = new Intl.NumberFormat('en-US', {
            minimumFractionDigits: {{ user_price_dec() }},
            maximumFractionDigits: {{ user_price_dec() }},
        });
        let lineReference = null;
        let dataTable = null;

        // Initialise the data table
        modalEl.addEventListener('shown.bs.modal', function (ev) {
            dataTable = $(tableEl).DataTable({
                ajax: ajaxRequest({
                    url: '{{ route('api.dataTable.salesOrderDetails.expenses') }}',
                    method: 'post',
                    processData: false,
                    contentType: false,
                    data: function (data) {
                        let formData = new FormData();
                        formData.set('line_reference', lineReference);

                        return buildURLQuery(data, null, formData);
                    },
                    eject: true,
                }),
                processing: true,
                serverSide: true,
                rowId: 'id',
                columns: [
                    {
                        title: '#',
                        data: 'trans_no',
                        render: {
                            display: (data, type, row) => {
                                if (window.AuthUser.canViewGL) {
                                    return `<button type="button" data-href="${route('glTrans.view', {type: row.type, trans_no: row.trans_no})}" class="btn btn-sm p-0 text-info">${row.trans_no}</button>`
                                }

                                return data;
                            }
                        }
                    },
                    {
                        title: 'Our Ref',
                        data: 'reference',
                        render: {
                            display: (data, type, row) => {
                                if (row.type == '{{ ST_SUPPINVOICE }}') {
                                    return `<button type="button" data-href="${route('suppInvoice.view', {trans_no: row.trans_no})}" class="btn btn-sm p-0 text-primary">${row.reference}</button>`
                                }

                                return data;
                            }
                        }
                    },
                    {
                        title: 'Date',
                        data: 'tran_date',
                        render: {
                            display: data => moment(data).format(dateFormat)
                        },
                    },
                    {
                        title: 'Supp Ref',
                        data: 'supp_reference'
                    },
                    {
                        title: 'Supplier',
                        className: 'text-wrap min-w-150px',
                        data: 'formatted_supplier_name'
                    },
                    {
                        title: 'Service',
                        className: 'text-wrap min-w-150px',
                        data: 'stock_description'
                    },
                    {
                        title: 'Total',
                        data: 'total_tax_free_price',
                        class: 'text-end',
                        render: {
                            display: data => numberFormatter.format(data)
                        },
                    }
                ]
            })
        })
    
        // Destroy the data table instance
        modalEl.addEventListener('hidden.bs.modal', function (ev) {
            lineReference = null;
            lineReferenceLabel.textContent = '';
            dataTable.destroy();
            empty(tableEl);
        })

        window.Transaction.viewExpenses = function viewExpenses(transaction) {
            lineReference = transaction.line_reference;
            lineReferenceLabel.textContent = lineReference;
            modal.show();
        }
    })
</script>
@endpush